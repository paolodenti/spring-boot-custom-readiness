name: Build and Publish

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  DOCKER_IMAGE: paolodenti/readiness
  PLATFORMS: "linux/amd64,linux/arm64/v8"

jobs:
  build:
    if: github.event.pull_request.merged == true
    name: Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Extract project version
        id: projectversion
        run: |
          PROJVERSION="$(make version)"
          echo "versionimage=${PROJVERSION}" >> $GITHUB_OUTPUT

      - name: Tag the new version
        run: |
          git tag ${{ steps.projectversion.outputs.versionimage }}
          git push origin ${{ steps.projectversion.outputs.versionimage }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: .docker/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.projectversion.outputs.versionimage }} , ${{ env.DOCKER_IMAGE }}:latest

      - name: Create tag from pom.xml
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.projectversion.outputs.versionimage }}',
              sha: context.sha
            })

      - name: Summary
        id: summary
        run: |
          echo "Pushed ${{ env.DOCKER_IMAGE }}:${{ steps.projectversion.outputs.versionimage }} ${{ env.DOCKER_IMAGE }}:latest"
